@use 'mixins' as *;

article {
    --max-text-width: 70ch;
}

article h1,
article h2,
article h3,
article h4,
article h5,
article h6 {
    font-family: Suzu Sans;
}

article h1 {
    font-size: var(--font-size-3xl);
}

article h2 {
    font-size: var(--font-size-2xl);
}

article h3 {
    font-size: var(--font-size-xl);
}

article pre,
article code {
    font-family: Suzu Mono;
}

article h1,
article h2,
article h3,
article h4,
article h5,
article p,
article table {
    max-width: var(--max-text-width);
}

.post-title {
    font-size: var(--font-size-3xl);
    // text-decoration: underline;
    // text-decoration-style: dotted;
    text-decoration-thickness: 0.25rem;
    margin-block: 0 var(--font-size-md);
}

.post-metadata {
    margin-block-end: var(--font-size-md);
}

article {
    font-size: var(--font-size-md);
}

article .wrapper {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: [toc] auto [content] auto;
    gap: var(--font-size-3xl);
}

article .wrapper .post-content {
    grid-row: content;
}

article .post-content {
    --section-padding: 0.5rem;
    --section-margin-base: var(--font-size-3xl);

    > :first-child {
        margin-block-start: 0;
    }

    h1 {
        // border-inline-start: 0.5rem solid;
        // padding-inline-start: var(--section-padding);

        counter-reset: h2-counter;

        // &::before {
        //     content: counter(h1-counter) " ";
        // }

        counter-increment: h1-counter;

        &:not(:first-child) {
            margin-block-start: calc(2 * var(--section-margin-base));
        }
    }

    h2 {
        counter-reset: h3-counter;

        &::before {
            content: counter(h2-counter) " ";
        }

        counter-increment: h2-counter;

        // border-inline-start: var(--section-padding) solid var(--text);
        // padding-inline-start: var(--section-padding);
        // margin-block-start: calc(1.5 * var(--section-margin-base));
    }

    h3 {
        counter-reset: h4-counter;
        counter-increment: h3-counter;

        &::before {
            content: counter(h2-counter) "." counter(h3-counter) " ";
        }


        // border-inline-start: calc(var(--section-padding) * 2) solid var(--text);
        // padding-inline-start: var(--section-padding);
        // margin-block-start: calc(0.5 * var(--section-margin-base));
    }

    h4 {
        counter-increment: h4-counter;

        &::before {
            content: counter(h2-counter) "." counter(h3-counter) "." counter(h4-counter) " ";
        }
    }

    h1::before,
    h2::before,
    h3::before,
    h4::before {
        color: var(--section-counter-color);
        font-size: 1.25em;
        font-weight: 700;
    }

    img {
        display: flex;
        flex-direction: row;
        align-items: center;

        margin-inline: auto;
        width: 50%;

        // padding: 0.5rem;
        border: var(--border-size-sm) solid;
        box-shadow: var(--box-offset) var(--box-offset);
    }

    blockquote,
    table,
    img {
        margin-block: var(--font-size-2xl);
    }

    figure {

        h1::before,
        h2::before,
        h3::before,
        h4::before,
        h5::before,
        h6::before {
            content: none;
        }
    }


    :target {
        --tbg: var(--target-bg, var(--accent));
        background: var(--tbg);
    }

    a[href^="http"]::after {
        content: ' \29C9';
        display: inline-block;
        // position: relative;

        padding-inline-start: 0.1em;

        text-decoration: none;
    }

    li[status="online"]::marker {
        content: 'ðŸŒ• ';
    }

    li[status="offline"]::marker {
        content: 'ðŸŒ‘ ';
    }

    details {
        --_border-color: var(--accent, var(--text));
        border: var(--border-size-xs) solid var(--_border-color);
        // background-color:
        //     var(--_border-color);
        padding: 0 var(--font-size-sm);

        >summary {
            font-weight: 700;
            margin: var(--font-size-md) 0;
        }

        >summary:hover {
            cursor: pointer;

        }
    }
}


article .wrapper aside.toc {
    grid-row: toc;
}

aside nav#TableOfContents {
    --_border-color: var(--accent, var(--text));
    top: var(--font-size-md);
    position: sticky;
    border: var(--border-size-sm) solid var(--_border-color);
    box-shadow: var(--box-offset) var(--box-offset) var(--_border-color);
    padding: 0 var(--font-size-md);
    overflow-y: scroll;
    max-height: 80vh;
    max-height: 80svh;

    // Shadow code taken from CSS-Tricks:
    // https://css-tricks.com/books/greatest-css-tricks/scroll-shadows/
    background:
        /* Shadow Cover TOP */
        linear-gradient(var(--page-bg) 30%,
            rgba(255, 255, 255, 0)) center top,

        /* Shadow Cover BOTTOM */
        linear-gradient(rgba(255, 255, 255, 0),
            var(--page-bg) 70%) center bottom,

        /* Shadow TOP */
        radial-gradient(farthest-side at 50% 0,
            var(--scroll-shadow, rgba(0, 0, 0, 0.2)),
            rgba(0, 0, 0, 0)) center top,

        /* Shadow BOTTOM */
        radial-gradient(farthest-side at 50% 100%,
            var(--scroll-shadow, rgba(0, 0, 0, 0.2)),
            rgba(0, 0, 0, 0)) center bottom;

    background-repeat: no-repeat;
    background-size: 100% 40px, 100% 40px, 100% 14px, 100% 14px;
    background-attachment: local, local, scroll, scroll;

    a {
        text-decoration: none;
    }

    ul,
    ol {
        list-style-type: none;
        padding-inline-start: 0;

        counter-reset: toc-counter;

        >li ul,
        >li ol {
            padding-inline-start: 1rem;
        }

        li::before {
            content: counters(toc-counter, ".") " ";
            counter-increment: toc-counter;

            color: var(--text);
        }
    }

    >ol {
        padding: 0;
    }
}


// NOTE: This hack is needed to place the ToC before the content at smaller
//       screen sizes.
//       Remember that the ToC comes _after_ the content in the HTML to have it
//       go on the right side of the page.
//
//       Here we create two rows and place the items accordingly.
//
//       Exchanging the positions in the HTML results in the same hack but done
//       on the columns. Life is hard.
@include tablet {
    article .wrapper {
        grid-template-columns: fit-content(Min(100%, var(--max-text-width))) fit-content(100%);
        grid-template-rows: none;
        justify-content: space-between;
    }
}

// @include desktop {
//     article .music-comment {
//         display: grid;
//         grid-template-columns: 1fr 1fr;
//         gap: 1rem;
//
//         :last-child {
//             grid-column: 2;
//         }
//
//         :first-child {
//             grid-column: 1;
//         }
//     }
// }

article table {
    width: 100%;
    border-collapse: collapse;
    padding: var(--font-size-md);
    // background: var(--table-bg);
    border: var(--border-size-sm) solid;
    box-shadow: var(--box-offset) var(--box-offset);

    th,
    td,
    caption {
        padding: var(--font-size-md);
    }

    th {
        text-align: left;
        background: var(--table-th-bg);
    }

    tr:nth-of-type(2n) {
        background: var(--table-even-bg);
    }
}


@include mobile {
    article table {
        th:nth-of-type(1) {
            display: none;
        }

        td:nth-of-type(1) {
            display: none;
        }
    }
}

article blockquote {
    padding: var(--font-size-md);
    border: var(--border-size-sm) solid;
    box-shadow: var(--box-offset) var(--box-offset);

    p {
        margin: 0;
    }
}

// See _defauls/list.html
// This is the single sub-article in a list of articles.
article.post-list-elem {
    border-inline-start: 4px solid var(--accent);
    padding-inline-start: 1rem;

    --gap: var(--font-size-lg);

    header {
        display: flex;
        flex-direction: row;
        // align-items: flex-start;
        gap: var(--gap);
        // justify-content: space-between;

        .title {
            line-height: 0;
        }

        *+*::before {
            content: '|';
        }

        .post-metadata {
            margin: 0;

            display: flex;
            flex-direction: row;

            gap: var(--gap);
        }

        .tags *+*::before {
            content: none;
        }

        .tags> :first-child {
            margin-left: calc(var(--gap) / 2);
        }
    }
}
