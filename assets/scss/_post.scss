@use 'mixins' as *;

article {
    --max-text-width: 70ch;

    font-size: var(--fluid-step-0);
    /* grid-template-columns: */
    /*     [header-start toc-start content-start] */
    /*         fit-content(Min(100%, var(--max-text-width))) */
    /*     [content-end toc-end header-end]; */

    /* grid-template-rows: [header] auto [toc] auto [content sidenotes] auto; */
}

article * {
    margin: 0;
}

article > * {
    grid-column: content;
}

article > header {
    grid-column: header;
    grid-row: header;

    .post-metadata {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        column-gap: var(--space-s-l);

        > time {
            flex-shrink: 0;
            min-width: fit-content;
            flex-grow: 999;
        }

        // > .translations {
        //     // flex-grow: 0.5;
        // }
        //
        // > .tags {
        //     // flex-grow: 0.5;
        // }
    }
}

/* article .sidenote { */
/*     --_border-color: var(--accent, var(--text)); */
/*     padding: var(--space-xs); */
/**/
/*     outline: var(--border-size-sm) solid var(--accent); */
/*     // grid-column: sidenotes; */
/* } */


article .post-content {
    /* grid-column: content; */
    /* grid-row: content; */

    --grid-gutter: 0;
    grid-template-columns: [content sidenotes] 1fr;
    // grid-row-gap: 0;

    > *:not(aside) {
        grid-column: content;
    }

    ul:not([class]) > li + li,
    ol:not([class]) > li + li {
        margin-block-start: 0.75em;
    }


    ul:not([class]),
    ol:not([class]) {
      > li > * + * {
          margin-block-start: 0.5em;
      }
    }

    .link-anchor {
        margin-block-start: 1.5em;

        > a {
            justify-content: space-between;

            text-decoration: none;
            line-height: 1;

            &::after {
                content: 'â§‰';
                margin-inline-start: 0.5rem;
                opacity: 0;
                text-decoration: none;

                transition: opacity var(--base-transition-duration);
            }

            &:hover {
                text-decoration: underline;
                text-underline-offset: 0.1em;
            }

            &:hover::after {
                opacity: 0.5;
                text-decoration: none;
            }

            &:focus {
                outline: 2px solid currentColor;
                outline-offset: 0.1em;
            }
        }

        &::before {
            line-height: 1;
        }
    }


    > :first-child {
        margin-block-start: 0;
    }

    h1 {
        // border-inline-start: 0.5rem solid;

        counter-reset: h2-counter;

        // &::before {
        //     content: counter(h1-counter) " ";
        // }

        counter-increment: h1-counter;

        // &:not(:first-child) {
        //     margin-block-start: calc(2 * var(--section-margin-base));
        // }
    }

    h2 {
        counter-reset: h3-counter;

        &::before {
            content: counter(h2-counter) " ";
        }

        counter-increment: h2-counter;

        // border-inline-start: var(--section-padding) solid var(--text);
    }

    h3 {
        counter-reset: h4-counter;
        counter-increment: h3-counter;

        &::before {
            content: counter(h2-counter) "." counter(h3-counter) " ";
        }


        // border-inline-start: calc(var(--section-padding) * 2) solid var(--text);
    }

    h4 {
        counter-increment: h4-counter;

        &::before {
            content: counter(h2-counter) "." counter(h3-counter) "." counter(h4-counter) " ";
        }
    }

    h1::before,
    h2::before,
    h3::before,
    h4::before {
        color: var(--section-counter-color, var(--heading-color));
        font-weight: 900;
    }

    figure,
    blockquote,
    details,
    table {
        grid-column: content / sidenotes;
    }

    figure {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--space-s);
        padding: var(--space-m);
        inline-size: min(100%, 600px);
        margin-inline: auto;

        img {
          border: var(--border-size-sm) solid;
          box-shadow: calc(-1 * var(--box-offset)) var(--box-offset);
          max-inline-size: 100%;
        }

        h1::before,
        h2::before,
        h3::before,
        h4::before,
        h5::before,
        h6::before {
            content: none;
        }
    }


    pre,
    code {
        background-color: var(--code-bg);
    }

    :not(pre) code {
        padding-inline: var(--space-3xs);
    }

    pre {
        padding: var(--space-xs);
        overflow-x: scroll;
    }

    :target {
        --tbg: var(--target-bg, var(--accent));
        border-bottom: 6px solid;
        border-image-source: linear-gradient(45deg, var(--tbg), transparent 70%);
        border-image-slice: 1;
    }

    a[href^="http"]::after {
        content: ' \29C9';
        display: inline-block;

        padding-inline-start: 0.1em;

        text-decoration: none;
    }

    li[status="online"]::marker {
        content: 'ðŸŒ• ';
    }

    li[status="offline"]::marker {
        content: 'ðŸŒ‘ ';
    }

    details {
        --_border-color: var(--accent, var(--text));
        outline: var(--border-size-xs) solid;
        padding: var(--space-s);

        >summary {
            font-weight: 700;
        }

        >summary:hover {
            cursor: pointer;
        }

        > * + * {
          margin: 0;
          margin-block-start: 1em;
          width: 100%;
        }
    }
}

article a.post-content {
    text-decoration: none;
}

article aside.toc {
    grid-column: toc;
    grid-row: toc;

    margin: 0;
}

article aside.toc nav#TableOfContents {
    --_border-color: var(--accent, var(--text));

    position: sticky;
    top: var(--space-m);

    outline: var(--border-size-sm) solid var(--_border-color);
    box-shadow: var(--box-offset) calc(-1 * var(--box-offset)) var(--_border-color);
    padding: var(--space-xs);
    overflow-y: scroll;
    max-height: 80vh;
    max-height: 80svh;

    // Shadow code taken from CSS-Tricks:
    // https://css-tricks.com/books/greatest-css-tricks/scroll-shadows/
    background:
        /* Shadow Cover TOP */
        linear-gradient(var(--page-bg) 30%,
            rgba(255, 255, 255, 0)) center top,

        /* Shadow Cover BOTTOM */
        linear-gradient(rgba(255, 255, 255, 0),
            var(--page-bg) 70%) center bottom,

        /* Shadow TOP */
        radial-gradient(farthest-side at 50% 0,
            var(--scroll-shadow, rgba(0, 0, 0, 0.2)),
            rgba(0, 0, 0, 0)) center top,

        /* Shadow BOTTOM */
        radial-gradient(farthest-side at 50% 100%,
            var(--scroll-shadow, rgba(0, 0, 0, 0.2)),
            rgba(0, 0, 0, 0)) center bottom;

    background-repeat: no-repeat;
    background-size: 100% 40px, 100% 40px, 100% 14px, 100% 14px;
    background-attachment: local, local, scroll, scroll;

    a {
        text-decoration: none;
    }

    ul,
    ol {
        list-style-type: none;
        padding-inline-start: 0;

        counter-reset: toc-counter;

        >li ul,
        >li ol {
            padding-inline-start: var(--space-m);
        }

        li::before {
            content: counters(toc-counter, ".") " ";
            counter-increment: toc-counter;

            color: var(--text);
        }
    }

    >ol {
        padding: 0;
    }
}


// NOTE: This hack is needed to place the ToC before the content at smaller
//       screen sizes.
//       Remember that the ToC comes _after_ the content in the HTML to have it
//       go on the right side of the page.
//
//       Here we create two rows and place the items accordingly.
//
//       Exchanging the positions in the HTML results in the same hack but done
//       on the columns. Life is hard.
@include tablet {
    article {
        grid-template-columns: [header-start content] 2fr [toc] auto [header-end];
        grid-template-rows: [header] auto [toc content] auto;
    }

    // article .post-content {
    //     grid-template-columns: [content sidenotes] fit-content(Min(100%, var(--max-text-width)));
    // }
}

@include desktop {
    // article .post-content {
    //     grid-template-columns:
    //         [content-start]
    //             fit-content(Min(100%, var(--max-text-width)))
    //         [sidenotes-start]
    //             fit-content(20ch)
    //         [sidenotes-end content-end];
    //
    // }

    /* article .sidenote { */
    /*     margin: var(--space-xs); */
    /*     outline: none; */
    /*     border-inline-start: var(--border-size-sm) solid var(--accent); */
    /*     border-block-end: var(--border-size-sm) solid var(--accent); */
    /*     padding: 0; */
    /*     padding-inline-start: var(--space-xs); */
    /*     padding-block-end: var(--space-xs); */
    /*     height: fit-content; */
    /*     float: inline-end; */
    /*     max-width: 25%; */
    /*     font-size: var(--fluid-step--1); */
    /* } */
}

article table {
    /* padding: var(--space-m); */
    outline: var(--border-size-sm) solid;
    box-shadow: calc(-1 * var(--box-offset)) var(--box-offset);

    thead {
        position: sticky;
        top: 0;
        z-index: 2;
    }

    th,
    td,
    caption {
        padding: var(--space-2xs);
        /* white-space: nowrap; */
        /* min-inline-size: fit-content; */
    }

    th {
        text-align: left;
        background-color: var(--text);
        color: var(--page-bg);
    }

    tr:nth-of-type(2n) {
        background: var(--table-even-bg);
    }

    tr:hover {
        background-color: var(--table-hover-bg);
    }
}

article blockquote {
    padding: var(--space-m);
    border: var(--border-size-sm) solid;
    box-shadow: calc(-1 * var(--box-offset)) var(--box-offset);

    > * + * {
        margin-block-start: var(--flow-space, 1em);
    }
}

.subpost-list {
    --grid-min-item-width: 30ch;
}

// See _defaults/list.html
// This is the single sub-article in a list of articles.
article.post-list-elem {
    --_header-bg-clr: var(--card-header, var(--text));
    --_space: var(--space-xs);

    --cluster-vertical-alignment: stretch;

    --gutter: 0;
    --region-space: var(--_space);

    > header {
        --gutter: var(--_space);
        background-color: var(--_header-bg-clr);
        color: var(--page-bg);

        nav ul li,
        nal ol li {
            --_clr: var(--page-bg);
            --_clr-hover: var(--text);
        }

        a  {
          color: var(--page-bg);
        }
    }

    > a {
      --gutter: var(--_space);
    }

    > a p {
        max-block-size: 20ch;
        overflow-y: scroll;
    }
}
